// Date: 29.08.2015 10:48:01
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package feldrinh.shadowmancy.blocks;

import org.apache.logging.log4j.Level;

import feldrinh.shadowmancy.utility.LogHelper;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class RefluxTableModel extends ModelBase
{
	//fields
	ModelRenderer Base;
	ModelRenderer Pillar1_0;
	ModelRenderer Pillar1_1;
	ModelRenderer Core;
	ModelRenderer Pillar1_2;
	ModelRenderer Pillar2_0;
	ModelRenderer Pillar2_1;
	ModelRenderer Pillar2_2;
	ModelRenderer Pillar3_0;
	ModelRenderer Pillar3_1;
	ModelRenderer Pillar3_2;
	ModelRenderer Pillar4_1;
	ModelRenderer Pillar4_2;
	ModelRenderer Pillar4_0;
	
	private static final float maxAngle = (float)(2*Math.PI);
	private static final float incrementAngle = (float)(0.02*Math.PI);
	private float coreRotation;
	
	public RefluxTableModel()
	{
		textureWidth = 64;
		textureHeight = 32;

		Base = new ModelRenderer(this, 0, 0);
		Base.addBox(0F, 0F, 0F, 16, 4, 16);
		Base.setRotationPoint(-8F, 20F, -8F);
		Base.setTextureSize(64, 32);
		Base.mirror = true;
		setRotation(Base, 0F, 0F, 0F);
		Pillar1_0 = new ModelRenderer(this, 0, 20);
		Pillar1_0.addBox(0F, 0F, 0F, 3, 5, 3);
		Pillar1_0.setRotationPoint(5F, 15F, 5F);
		Pillar1_0.setTextureSize(64, 32);
		Pillar1_0.mirror = true;
		setRotation(Pillar1_0, 0F, 0F, 0F);
		Pillar1_1 = new ModelRenderer(this, 12, 20);
		Pillar1_1.addBox(-1F, -3F, -1F, 2, 4, 2);
		Pillar1_1.setRotationPoint(6.3F, 13F, 6.3F);
		Pillar1_1.setTextureSize(64, 32);
		Pillar1_1.mirror = true;
		setRotation(Pillar1_1, 0.1745329F, 0F, -0.1745329F);
		Core = new ModelRenderer(this, 24, 20);
		Core.addBox(-1F, 0F, -1F, 2, 2, 2);
		Core.setRotationPoint(0F, 2F, 0F);
		Core.setTextureSize(64, 32);
		Core.mirror = true;
		setRotation(Core, 0F, 0F, 0F);
		Pillar1_2 = new ModelRenderer(this, 20, 20);
		Pillar1_2.addBox(-0.5F, -3F, -0.5F, 1, 3, 1);
		Pillar1_2.setRotationPoint(5.6F, 9F, 5.6F);
		Pillar1_2.setTextureSize(64, 32);
		Pillar1_2.mirror = true;
		setRotation(Pillar1_2, 0.3490659F, 0F, -0.3490659F);
		Pillar2_0 = new ModelRenderer(this, 0, 20);
		Pillar2_0.addBox(0F, 0F, 0F, 3, 5, 3);
		Pillar2_0.setRotationPoint(-8F, 15F, 5F);
		Pillar2_0.setTextureSize(64, 32);
		Pillar2_0.mirror = true;
		setRotation(Pillar2_0, 0F, 0F, 0F);
		Pillar2_1 = new ModelRenderer(this, 12, 20);
		Pillar2_1.addBox(-1F, -3F, -1F, 2, 4, 2);
		Pillar2_1.setRotationPoint(-6.3F, 13F, 6.3F);
		Pillar2_1.setTextureSize(64, 32);
		Pillar2_1.mirror = true;
		setRotation(Pillar2_1, 0.1745329F, 0F, 0.1745329F);
		Pillar2_2 = new ModelRenderer(this, 20, 20);
		Pillar2_2.addBox(-0.5F, -3F, -0.5F, 1, 3, 1);
		Pillar2_2.setRotationPoint(-5.6F, 9F, 5.6F);
		Pillar2_2.setTextureSize(64, 32);
		Pillar2_2.mirror = true;
		setRotation(Pillar2_2, 0.3490659F, 0F, 0.3490659F);
		Pillar3_0 = new ModelRenderer(this, 0, 20);
		Pillar3_0.addBox(0F, 0F, 0F, 3, 5, 3);
		Pillar3_0.setRotationPoint(5F, 15F, -8F);
		Pillar3_0.setTextureSize(64, 32);
		Pillar3_0.mirror = true;
		setRotation(Pillar3_0, 0F, 0F, 0F);
		Pillar3_1 = new ModelRenderer(this, 12, 20);
		Pillar3_1.addBox(-1F, -3F, -1F, 2, 4, 2);
		Pillar3_1.setRotationPoint(6.3F, 13F, -6.3F);
		Pillar3_1.setTextureSize(64, 32);
		Pillar3_1.mirror = true;
		setRotation(Pillar3_1, -0.1745329F, 0F, -0.1745329F);
		Pillar3_2 = new ModelRenderer(this, 20, 20);
		Pillar3_2.addBox(-0.5F, -3F, -0.5F, 1, 3, 1);
		Pillar3_2.setRotationPoint(5.6F, 9F, -5.6F);
		Pillar3_2.setTextureSize(64, 32);
		Pillar3_2.mirror = true;
		setRotation(Pillar3_2, -0.3490659F, 0F, -0.3490659F);
		Pillar4_1 = new ModelRenderer(this, 12, 20);
		Pillar4_1.addBox(-1F, -3F, -1F, 2, 4, 2);
		Pillar4_1.setRotationPoint(-6.3F, 13F, -6.3F);
		Pillar4_1.setTextureSize(64, 32);
		Pillar4_1.mirror = true;
		setRotation(Pillar4_1, -0.1745329F, 0F, 0.1745329F);
		Pillar4_2 = new ModelRenderer(this, 20, 20);
		Pillar4_2.addBox(-0.5F, -3F, -0.5F, 1, 3, 1);
		Pillar4_2.setRotationPoint(-5.6F, 9F, -5.6F);
		Pillar4_2.setTextureSize(64, 32);
		Pillar4_2.mirror = true;
		setRotation(Pillar4_2, -0.3490659F, 0F, 0.3490659F);
		Pillar4_0 = new ModelRenderer(this, 0, 20);
		Pillar4_0.addBox(0F, 0F, 0F, 3, 5, 3);
		Pillar4_0.setRotationPoint(-8F, 15F, -8F);
		Pillar4_0.setTextureSize(64, 32);
		Pillar4_0.mirror = true;
		setRotation(Pillar4_0, 0F, 0F, 0F);
	}
	
	public void render(float f1, float partialTick)
	{
		Core.rotateAngleY = coreRotation + partialTick * incrementAngle;
		Base.render(f1);
		Core.render(f1);
		Pillar1_0.render(f1);
		Pillar1_1.render(f1);
		Pillar1_2.render(f1);
		Pillar2_0.render(f1);
		Pillar2_1.render(f1);
		Pillar2_2.render(f1);
		Pillar3_0.render(f1);
		Pillar3_1.render(f1);
		Pillar3_2.render(f1);
		Pillar4_1.render(f1);
		Pillar4_2.render(f1);
		Pillar4_0.render(f1);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}
	
	public void incrementCoreAnimation()
	{
		coreRotation += incrementAngle;
		if(coreRotation >= maxAngle)
		{
			coreRotation -= maxAngle;
		}
	}
}
